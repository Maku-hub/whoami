server {
    listen 80;
    server_name frog02-20981.wykr.es;

    # Redirect HTTP to HTTPS
    return 301 https://$host$request_uri;
}

server {
        listen 20981   default_server;
        #listen 30981   default_server;
        #listen 40981   default_server;

        server_name    frog02-20981.wykr.es;

        root /var/www/html/;
        index index.html;

        # Redirect all non-slash URLs to include a trailing slash
        #rewrite ^/save-user-data$ /save-user-data/ permanent;
        rewrite ^([^.]*[^/])$ $1/ permanent;

        error_page 500 502 503 504 /errors/50x.html;
        location /errors/50x.html {
            internal;
        }
        error_page 401 /errors/401.html;
        location /errors/401.html {
            internal;
        }
        error_page 403 /errors/403.html;
        location /errors/403.html {
            internal;
        }
        error_page 404 /errors/404.html;
        location /errors/404.html {
            internal;
        }

        # Endpoint to serve user info
        location /get-user-info {
            default_type application/json;
            add_header Content-Type application/json;

            # Use X-Forwarded-For if present, otherwise fall back to $remote_addr
            set $client_ip $remote_addr;
            if ($http_x_forwarded_for) {
                set $client_ip $remote_addr;
                set $client_ip $http_x_forwarded_for;
            }

            return 200 '{"ip": "$client_ip", 
                         "user_agent": "$http_user_agent", 
                         "accept_language": "$http_accept_language", 
                         "referer": "$http_referer", 
                         "accept": "$http_accept", 
                         "accept_encoding": "$http_accept_encoding", 
                         "host": "$http_host", 
                         "connection": "$http_connection", 
                         "x_forwarded_proto": "$http_x_forwarded_proto", 
                         "x_requested_with": "$http_x_requested_with"}';
        }

        location /ip-api/ {
            proxy_pass http://ip-api.com/json/;
            proxy_set_header Host ip-api.com;
            rewrite ^/ip-api/(.*)$ /json/$1 break;
        }

        location /save-user-data/ {
            proxy_pass http://127.0.0.1:5000/save-user-data/;
            proxy_set_header Host $host;
            proxy_set_header X-Real-IP $remote_addr;
            proxy_set_header X-Forwarded-For $proxy_add_x_forwarded_for;
            proxy_set_header X-Forwarded-Proto $scheme;
        }

        location /stats/ {
            proxy_pass http://127.0.0.1:5000/stats/;
            proxy_set_header Host $host;
            proxy_set_header X-Real-IP $remote_addr;
            proxy_set_header X-Forwarded-For $proxy_add_x_forwarded_for;
            proxy_set_header X-Forwarded-Proto $scheme;
        }

        location = /.well-known/mojecertpl/verification {
            alias /var/www/html/files/verification;
        }

}
